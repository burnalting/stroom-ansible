---
########### LOCALHOST  ###########

- name: Verify local_config_dir is set up
  import_playbook: ./verify_local_config_dir_exists.yml

################### SETUP HOST(S) ###################

- name: Setup stroom hosts
  import_playbook: ./setup_stroom_hosts.yml
  tags:
    - setup
        
- hosts:
    - all
  gather_facts: true # Needed for yum stuff
  become: true
  become_user: "{{ stroom_user }}"
  vars:
    - stack_dir_from: "{{ migration_dir }}/stack-{{ stroom_version_from }}"
    - stack_dir_to: "{{ migration_dir }}/stack-{{ stroom_version_to }}"
  tasks:

    ################### TEAR DOWN ###################

      # Remove the from stack dir
    - name: Ensure '{{ stack_dir_from }}' is absent
      file:
        path: "{{ stack_dir_from }}"
        state: absent
      tags:
        - teardown

      # Remove the to stack dir
    - name: Ensure '{{ stack_dir_to }}' is absent
      file:
        path: "{{ stack_dir_to }}"
        state: absent
      tags:
        - teardown

      # Remove the whole migration dir only if we want to remove the compiled source
      # as it takes so long to compile
    - name: Ensure '{{ migration_dir}}' is absent
      file:
        path: "{{ migration_dir }}"
        state: absent
      tags:
        - never
        - clean_compiled
        - teardown

    - import_role:
        name: stack/delete
      vars:
        stack_version: "{{ stroom_version_from }}"
        stack_install_root_dir: "{{ stack_dir_from }}"
      tags:
        - teardown

    - import_role:
        name: stack/delete
      vars:
        stack_version: "{{ stroom_version_to }}"
        stack_install_root_dir: "{{ stack_dir_to }}"
      tags:
        - teardown

    ################### SET UP & RUN FROM VERSION ###################

    - import_role:
        name: stack/deploy
      vars:
        stack_version: "{{ stroom_version_from }}"
        stack_install_root_dir: "{{ stack_dir_from }}"

      # Start up the db so we can import into it
    - import_role:
        name: stack/ensure_state
      vars:
        stack_install_root_dir: "{{ stack_dir_from }}"
        stack_version: "{{ stroom_version_from }}"
        state: "started"

      # Start up the DB
    - import_role:
        name: stack/ensure_state
      vars:
        stack_install_root_dir: "{{ stack_dir_from }}"
        stack_version: "{{ stroom_version_from }}"
        state: "started"

    - import_role:
        name: stack/import_dump
      vars:
        stack_install_root_dir: "{{ stack_dir_from }}"
      tags:
        - import_dump

    ################### SET UP & RUN TO VERSION ###################

    - import_role:
        name: stack/deploy
      vars:
        stack_version: "{{ stroom_version_to }}"
        stack_install_root_dir: "{{ stack_dir_to }}"

      # Start up all the services in the new stack which will run the migration
    - import_role:
        name: stack/ensure_state
      vars:
        stack_install_root_dir: "{{ stack_dir_to }}"
        stack_version: "{{ stroom_version_to }}"
        state: "started"

      # At this point the migration will either have worked in which case the
      # playbook will complete successfully or it will fail and the step above
      # will be a failure. The logs can be viewed using 'docker logs stroom' or
      # 'docker logs stroom-auth-service' on the remote host.
