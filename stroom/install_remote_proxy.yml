---

########### LOCALHOST  ###########

#- hosts:
    #- localhost
  #gather_facts: false
  #vars:
    #- stack_install_root_dir: "{{ local_config_dir }}"
  #tags:
    #- local_config
  #tasks:
    ############ DOWNLOAD RELEASE TO LOCAL CONFIG DIR ###########

    #- name: 'Check mandatory variables are defined'
      #assert:
        #that:
          #- local_config_dir is defined

    #- debug:
        #msg:
          #- "local_config_dir: {{ local_config_dir }}"
        #verbosity: 2

    #- stat:
        #path: "{{ local_config_dir }}"
      #register: local_config_dir_info

    #- name: "Check local_config_dir {{ local_config_dir }} exists"
      #fail:
        #msg: "local_config_dir {{ local_config_dir }} doesn't exist"
      #when: |
        #(local_config_dir.stat.isDir is defined and local_config_dir.stat.isDir==true) or 
        #(local_config_dir.stat.isLnk is defined and local_config_dir.stat.isLnk==true)

    #- name: "Download stack {{stack_name }} {{ stack_version }} to {{ local_config_dir }}"
      #import_role:
        #name: stack/download
      #vars:
        #stack_install_root_dir: "{{ local_config_dir }}"

    ########### SETUP LOCAL CONFIGURATION  ###########

    # This is either a mandrolic process to configure things such as certs
    # and nginx config, or do it in ansible.

    # Could do the env file mods with ansible and do the volumes dir mods
    # externally.





########### 'stroom_remote_proxy_stack' HOSTS  ###########

- hosts:
    - stroom_remote_proxy_stack
  gather_facts: true # Needed for yum stuff
  vars:
    stack_bin_dir: "{{ stack_install_root_dir }}/{{ stack_name }}/{{ stack_name }}-{{ stack_version }}"
    stack_config_dir: "{{ stack_install_root_dir }}/{{ stack_name }}/{{ stack_name }}-{{ stack_version }}/config"
    stack_volumes_dir: "{{ stack_install_root_dir }}/{{ stack_name }}/volumes"
    stack_env_var_file: "{{ stack_config_dir }}/{{ stack_name }}.env"
  tasks:

    - name: 'Check mandatory variables are defined'
      assert:
        that:
          - local_config_dir is defined
          - proxy_forward_url is defined
          - stack_env_vars is defined
          - stack_install_root_dir is defined
          - stack_name is defined
          - stack_version is defined
          - stroom_user is defined

    - debug:
        msg:
          - "Deploying/configuring stroom-proxy in {{ stack_bin_dir }} as user {{ stroom_user }}"
      tags:
        - deploy
        - configure

    ################### SETUP HOST ###################

    - import_role:
        name: setup/common
      tags:
        - setup

    - import_role:
        name: setup/docker
      vars:
        docker_user: "{{ stroom_user }}" 
      tags:
        - setup

    - name: "Block of tasks to run as {{ stroom_user }}"
      become: yes
      become_user: "{{ stroom_user }}"
      block:

    ########### DEPLOY REMOTE PROXY STACK  ###########

        - import_role:
            name: stack/download
          tags:
            - deploy

    ########### UPDATE REMOTE STACK CONFIG  ###########

        - import_role:
            name: stack/set_host_ip
          tags:
            - deploy
            - configure

        # NOTE: It is debatable if we configure the file like this or use a jinja template file
        # If we use templates then we need to maintain the template in this repo.
        # For real deployments where a clone/fork of this repo is used, jinja templates
        # would probably make more sense, and be a load faster.

          # Set all the env vars in the stack env file
        - import_role:
            name: stack/set_env_vars_values
          tags:
            - deploy
            - configure

        #- import_role:
            #name: stack/update_certs
          #tags:
            #- deploy
            #- configure

          # TODO Not sure what implications this has on the docker bind mounted files.
          # See unsafe_writes in ansible docs
          # This approach does at least mean we don't have to specify what files need to
          # be copied, we just add them in the appropriate place.
        - name: "Copy 'volumes' configuration from {{ inventory_dir }}/files/volumes/ to {{ stack_volumes_dir }}/"
          copy:
            src: "{{ inventory_dir }}/files/volumes/"
            dest: " {{ stack_volumes_dir }}/"
          tags:
            - deploy
            - configure
            

