---
########### LOCALHOST  ###########

- hosts:
    - localhost
  gather_facts: false
  vars:
  tasks:

    - name: 'Check mandatory variables are defined'
      assert:
        that:
          - local_config_dir is defined

    - debug:
        msg:
          - "local_config_dir: {{ local_config_dir }}"
      tags:
        - all


################### SETUP HOST ###################

- name: Setup stroom hosts
  import_playbook: ./setup_stroom_hosts.yml
  tags:
    - setup

########### 'stroom_remote_proxy_stack' HOSTS  ###########

- hosts:
    - stroom_remote_proxy_stack
  gather_facts: true # Needed for yum stuff
  vars:
    stack_bin_dir: "{{ stack_install_root_dir }}/{{ stack_name }}/{{ stack_name }}-{{ stack_version }}"
    stack_config_dir: "{{ stack_install_root_dir }}/{{ stack_name }}/{{ stack_name }}-{{ stack_version }}/config"
    stack_volumes_dir: "{{ stack_install_root_dir }}/{{ stack_name }}/volumes"
    stack_env_var_file: "{{ stack_config_dir }}/{{ stack_name }}.env"
    stroom_config_files_and_templates_dir: "{{ local_config_dir }}/files_and_templates/stroom"
    stroom_proxy_config_files_and_templates_dir: "{{ local_config_dir }}/files_and_templates/stroom-proxy"
  tasks:

    - name: 'Check mandatory variables are defined'
      assert:
        that:
          - local_config_dir is defined
          - stack_env_vars is defined
          - stack_install_root_dir is defined
          - stack_name is defined
          - stack_version is defined
          - stroom_user is defined

    - debug:
        msg:
          - "Deploying/configuring stroom-proxy in {{ stack_bin_dir }} as user {{ stroom_user }}"
      tags:
        - deploy
        - configure


    - name: "Block of tasks to run as {{ stroom_user }}"
      become: true
      become_user: "{{ stroom_user }}"
      block:

    ########### DEPLOY VANILLA REMOTE PROXY STACK  ###########

        - import_role:
            name: stack/download
          tags:
            - deploy

    ########### UPDATE REMOTE STACK CONFIG  ###########

          # Remove the development certificates
        - import_role:
            name: stack/remove_certs
          tags:
            - remove_dev_certs
            - deploy
            - configure
          when: remove_development_certificates | default(false) == true

        - import_role:
            name: stack/update_config
          tags:
            - deploy
            - configure
